{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","addCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","type","value","onChange","target","getGifs","category","a","url","process","encodeURI","fetch","resp","json","data","map","g","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"6MAGe,SAASA,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAAe,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAgBjD,OACI,0BAAMC,SATW,SAAAC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAS,IACpBP,EAAYE,GACZC,EAAc,OAMd,2BACIK,KAAK,OACLC,MAAOP,EACPQ,SAjBc,SAAAL,GACtBF,EAAcE,EAAEM,OAAOF,W,2BCRlBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACbC,EADa,UACJC,uCADI,uDACgFC,UAAUJ,GAD1F,sBAEAK,MAAMH,GAFN,cAEbI,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAHW,kBAIZA,EAAKC,KAAI,SAAAC,GAAM,IAAD,EACjB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAG,UAAEQ,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBZ,SARrB,2CAAH,sDCGL,SAASa,EAAT,GAAsC,IAAfH,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IACzC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,ICDD,SAASO,EAAT,GAAgC,IAAbnB,EAAY,EAAZA,SAAY,ECHlB,SAAAA,GAAa,IAAD,EACVZ,mBAAS,CAC/ByB,OAAQ,GACRO,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAiBpC,OAXAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLT,OAAQY,EACRL,SAAS,SAIlB,CAACpB,IAEGqB,EDZqBK,CAAa1B,GAAjCa,EAFkC,EAElCA,OAAQO,EAF0B,EAE1BA,QAEhB,OACI,oCACI,4BAAKpB,GACJoB,GAAW,yCACZ,yBAAKJ,UAAU,aAEPH,EAAOJ,KAAI,gBAAGE,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOV,EAAd,EAAcA,IAAd,OACP,kBAACa,EAAD,CACIY,IAAKhB,EACLC,MAAOA,EACPV,IAAKA,SEhBjC,IAwBe0B,EAxBM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,cAFvB,mBAEhByC,EAFgB,KAEJC,EAFI,KAKvB,OACI,oCACI,6CACA,kBAAC5C,EAAD,CAAaC,YALD,SAAAa,GAAQ,OAAI8B,EAAc,CAAC9B,GAAF,mBAAe6B,QAMpD,6BACA,4BAEQA,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAACmB,EAAD,CACIQ,IAAK3B,EACLA,SAAUA,UCdtC+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bf0b9868.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AddCategory({ addCategory }) {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (inputValue.length > 0) {\r\n            addCategory(inputValue);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    addCategory: PropTypes.func.isRequired\r\n};\r\n","export const getGifs = async (category) => {\r\n    const url = `${process.env.REACT_APP_URL_GIFS_SEARCH}?api_key=ksWsabunuHtBBI92cm2QNSLm6A8yQiBC&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    return data.map(g => {\r\n        return {\r\n            id: g.id,\r\n            title: g.title,\r\n            url: g.images?.downsized_medium.url\r\n        };\r\n    });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function GifGridItem({ title, url }) {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nexport default function GifGrid({ category }) {\r\n\r\n    const { images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h2>{category}</h2>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(({ id, title, url }) => (\r\n                        <GifGridItem\r\n                            key={id}\r\n                            title={title}\r\n                            url={url}\r\n                        />)\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = category => {\r\n    const [state, setState] = useState({\r\n        images: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs => {\r\n            setState({\r\n                images: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n};","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    const addCategory = category => setCategories([category, ...categories]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpert App</h2>\r\n            <AddCategory addCategory={addCategory} />\r\n            <hr />\r\n            <ul>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}